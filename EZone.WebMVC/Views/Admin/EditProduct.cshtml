@model EZone.Data.Product

@{
    ViewBag.Title = "EditProduct";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}
}

<script src="~/Scripts/jquery-3.5.1.min.js"></script>

<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/MyMainLayOut.css" rel="stylesheet" />
<link href="~/Content/alertifyjs/alertify.min.css" rel="stylesheet" />
<link href="~/Content/alertifyjs/themes/default.min.css" rel="stylesheet" />

<div class="container">
    <h2>Edit Product</h2>
    @using (Html.BeginForm("EditProduct", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ProductId)

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CategoryId, ViewBag.CategoryId as SelectList, "Select a Category", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>


            @Html.HiddenFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })



            @Html.HiddenFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control" } })


            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <img src="~/ProductImg/@Model.ProductImage" height="150" width="150" />
                    <input type="file" name="file" id="file" style="width: 100%;" />
                    @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsNew, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsNew)
                        @Html.ValidationMessageFor(model => model.IsNew, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                        <a onclick="window.history.back();" class="btn btn-danger">Cancel</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div>
    @Html.ActionLink("Back to List", "ProductIndex")
</div>
